using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace De1
{
    public partial class FrmSinhVien : Form
    {
        public FrmSinhVien()
        {
            InitializeComponent();
        }
        private void LoadLopList()
        {
            cboLop.DataSource = GetLopList(); // Hàm GetLopList trả về danh sách lớp
            cboLop.DisplayMember = "TenLop";  // Hiển thị tên lớp
            cboLop.ValueMember = "MaLop";     // Giá trị thực sự là mã lớp
        }

        private List<SinhVien> GetSinhVienList()
        {
            return new List<SinhVien>
{
    new SinhVien { MaSV = "SV0001", HoTenSV = "Nguyễn Văn A", MaLop = "L01", NgaySinh = new DateTime(2000, 1, 1) },
    new SinhVien { MaSV = "SV0002", HoTenSV = "Trần Thị B", MaLop = "L02", NgaySinh = new DateTime(2001, 2, 15) }
};
        }
        private List<Lop> GetLopList()
        {
            return new List<Lop>
{
    new Lop { MaLop = "L01", TenLop = "Lớp 1" },
    new Lop { MaLop = "L02", TenLop = "Lớp 2" }
};
        }

        public class Lop
        {
            public string MaLop { get; set; }
            public string TenLop { get; set; }
        }

        private void btThem_Click(object sender, EventArgs e)
        {
            // Thêm một sinh viên mới vào DataGridView
            if (!string.IsNullOrEmpty(lblMaSV.Text) && !string.IsNullOrEmpty(lblHoTen.Text) && cboLop.SelectedValue != null)
            {
                dataGridView1.Rows.Add(lblMaSV.Text, lblHoTen.Text, cboLop.SelectedValue.ToString(), lblNgaySinh.Text);
                MessageBox.Show("Thêm sinh viên thành công!", "Thông báo");
            }
            else
            {
                MessageBox.Show("Vui lòng nhập đầy đủ thông tin sinh viên!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void btXoa_Click(object sender, EventArgs e)
        {
            // Xóa dòng được chọn trong DataGridView
            if (dataGridView1.SelectedRows.Count > 0)
            {
                foreach (DataGridViewRow row in dataGridView1.SelectedRows)
                {
                    if (!row.IsNewRow)
                    {
                        dataGridView1.Rows.Remove(row);
                    }
                }
                MessageBox.Show("Xóa sinh viên thành công!", "Thông báo");
            }
            else
            {
                MessageBox.Show("Vui lòng chọn một dòng để xóa!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void btSua_Click(object sender, EventArgs e)
        {
            // Sửa thông tin sinh viên trong DataGridView
            if (dataGridView1.SelectedRows.Count == 1)
            {
                DataGridViewRow selectedRow = dataGridView1.SelectedRows[0];
                selectedRow.Cells[0].Value = lblMaSV.Text;         // Mã sinh viên
                selectedRow.Cells[1].Value = lblHoTen.Text;        // Họ tên
                selectedRow.Cells[2].Value = cboLop.SelectedValue; // Mã lớp
                selectedRow.Cells[3].Value = lblNgaySinh.Text;     // Ngày sinh

                MessageBox.Show("Cập nhật thông tin thành công!", "Thông báo");
            }
            else
            {
                MessageBox.Show("Vui lòng chọn một dòng để sửa!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void textBox2_TextChanged(object sender, EventArgs e)
        {
            foreach (ListViewItem item in lvSinhvien.Items)
            {
                if (!item.SubItems[1].Text.Contains(lblHoTenSV.Text))
                    item.BackColor = SystemColors.ControlLight;
                else
                    item.BackColor = Color.White;
            }
        }

        private void btThoat_Click(object sender, EventArgs e)
        {
            this.Close();
        }



        private void lvSinhvien_SelectedIndexChanged(object sender, EventArgs e)
        {
            lvSinhvien.Items.Clear(); // Xóa tất cả các item cũ trong ListView

            var sinhviens = GetSinhVienList(); // Lấy danh sách sinh viên từ hàm GetSinhVienList

            // Duyệt qua danh sách sinh viên và thêm từng sinh viên vào ListView
            foreach (var sv in sinhviens)
            {
                // Tạo một item mới với mã sinh viên
                ListViewItem item = new ListViewItem(sv.MaSV);
                // Thêm các thông tin khác vào các cột
                item.SubItems.Add(sv.HoTenSV);
                item.SubItems.Add(sv.MaLop);
                item.SubItems.Add(sv.NgaySinh.ToShortDateString()); // Định dạng ngày sinh theo kiểu ngắn (dd/MM/yyyy)

                // Thêm item vào ListView
                lvSinhvien.Items.Add(item);
            }
        }

        private void cboLop_SelectedIndexChanged(object sender, EventArgs e)
        {
            string selectedClass = cboLop.SelectedValue.ToString();
            Console.WriteLine("Đã chọn lớp: " + selectedClass);
        }

        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            // Hiển thị dữ liệu của dòng được chọn lên các TextBox
            if (e.RowIndex >= 0)
            {
                DataGridViewRow row = dataGridView1.Rows[e.RowIndex];
                lblMaSV.Text = row.Cells[0].Value?.ToString();
                lblHoTen.Text = row.Cells[1].Value?.ToString();
                cboLop.SelectedValue = row.Cells[2].Value?.ToString();
                lblNgaySinh.Text = row.Cells[3].Value?.ToString();
            }
        }
    }



}
